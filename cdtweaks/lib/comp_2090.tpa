/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// Change XP Cap                                    \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

/////                                                  \\\\\
///// remove cap                                       \\\\\
/////                                                  \\\\\

COPY ~cdtweaks/2da/xplevel.2da~ ~override/xplevel.2da~
INCLUDE ~cdtweaks/lib/xp_common.tpa~

// fix borked tables if monastic orders is installed
ACTION_IF MOD_IS_INSTALLED ~monasticorders.tp2~ ~0~ BEGIN 

  COPY_EXISTING ~backstab.2da~ ~override~
                ~crippstr.2da~ ~override~
                ~sneakatt.2da~ ~override~
    REPLACE_TEXTUALLY 
      ~^\(QD\(MONK\|MONKSS\|~
      ~\1\3\3\4~ // duplicate column zero entry to complete columns
    BUT_ONLY IF_EXISTS

END  

// extend bard, ranger pickpocketing to 200 and levels to 50
INCLUDE ~cdtweaks/lib/thieving_to_50.tpa~

ACTION_CLEAR_ARRAY  cd_extend_tables // use array so we can push HP table entries into it
ACTION_DEFINE_ASSOCIATIVE_ARRAY cd_extend_tables BEGIN
  lvlmodwm => 0 // wild mage level modulation for wild surges
  monkfist => 0 // monk fist progression
  mxsplbrd => 0 // bard spell table
  mxspldd  => 0 // dragon disciple spell table
  mxspldru => 0 // druid spell table
  mxsplpal => 0 // paladin spell table
  mxsplprs => 0 // priest spell table
  mxsplran => 0 // ranger spell table
  mxsplshm => 0 // shaman spell table
  mxsplsrc => 0 // sorcerer spell table
  mxsplwiz => 0 // mage spell table
  raisdead => 0 // raise dead temple prices
  splsrckn => 0 // sorcerer spell table
  splshmkn => 0 // shaman spell table

  // manually add hp tables for non-ee games; being added below again harms nothing
  hpbarb   => 0 // barbarian hp table
  hpmonk   => 0 // monk hp table
  hpprs    => 0 // priest hp table
  hprog    => 0 // rogue hp table
  hpwar    => 0 // warrior hp table
  hpwiz    => 0 // mage hp table

END

// extend hp tables for ee games
ACTION_IF FILE_EXISTS_IN_GAME hpclass.2da THEN BEGIN

  // add hp tables to list of tables to extend
  COPY_EXISTING ~hpclass.2da~ ~override~
    COUNT_2DA_ROWS ~2~ "rows"
    FOR ( index = 1 ; index < rows ; index = index + 1 ) BEGIN
      SET "exists" = 0
      READ_2DA_ENTRY "%index%" 1 2 "table"
      DEFINE_ASSOCIATIVE_ARRAY cd_extend_tables BEGIN "%table%" => 0 END
    END

END

// easy replacements for 2das with levels as rows
ACTION_PHP_EACH cd_extend_tables AS file => foo BEGIN

  ACTION_IF FILE_EXISTS_IN_GAME ~%file%.2da~ THEN BEGIN

    APPEND ~%file%.2da~ ~CD_EOF_CUSTOM~ // also normalizes excessive/missing line breaks at EOF

    // why the chicanery with CD_EOF_CUSTOM and REPLACE_EVALUATE? The 2DA functions get unreliable on two-column tables such as raisdead
    COPY_EXISTING ~%file%.2da~ ~override~ // wild mage level modulation for wild surges
      FOR (index = 1 ; index < 50 ; ++index) BEGIN
        REPLACE_EVALUATE ~^%index%\([ %TAB%].*\)\([%LNL%%MNL%%WNL%]+CD_EOF_CUSTOM\)~ BEGIN
          SET new = index + 1
        END
~%index%\1
%new%\1\2~
      END
      REPLACE_TEXTUALLY ~CD_EOF_CUSTOM~ ~~
      PRETTY_PRINT_2DA
      BUT_ONLY

  END

END

// extend level-based abilities to 50
ACTION_FOR_EACH file IN backstab crippstr layhands savemonk saveprs saverog savewar savewiz sneakatt thac0 xpbonus wspatck BEGIN

  ACTION_IF FILE_EXISTS_IN_GAME ~%file%.2da~ THEN BEGIN

    COPY_EXISTING ~%file%.2da~ ~override~
      COUNT_2DA_COLS col_num
      COUNT_2DA_ROWS (col_num - 1) row_num
      READ_2DA_ENTRY 0 (col_num - 2) (col_num - 1) level    // read last enry of top line as level
      READ_2DA_ENTRY 0 0 (col_num - 1) val                  // weidu seems to freak out with a top line w/ one less entry
      SET_2DA_ENTRY  0 0 (col_num - 1) ~CD_DELETE_ME %val%~ // temp
      FOR (index = level ; index < 50 ; ++index) BEGIN
        SET new = index + 1
        FOR (index2 = 1 ; index2 < row_num ; ++index2) BEGIN // extend all other rows with previous column's value
          READ_2DA_ENTRY index2 (col_num - 1) (col_num) val
          SET_2DA_ENTRY  index2 (col_num - 1) (col_num) ~%val% %val%~
        END
        SET_2DA_ENTRY 0 (col_num - 1) (col_num) ~%index% %new%~ // extend level row
        SET col_num += 1
      END
      REPLACE_TEXTUALLY ~CD_DELETE_ME~ ~~
      PRETTY_PRINT_2DA
      BUT_ONLY

  END

END

ACTION_IF FILE_EXISTS_IN_GAME ~kitlist.2da~ THEN BEGIN // if kits are present

  ACTION_CLEAR_ARRAY  cd_extend_clabs
  ACTION_DEFINE_ASSOCIATIVE_ARRAY cd_extend_clabs BEGIN // start with base class tables
    clabba01 => 0 // generic bard abilities
    clabdr01 => 0 // generic druid abilities
    clabfi01 => 0 // generic fighter abilities
    clabmo01 => 0 // generic monk abilities
    clabpa01 => 0 // generic paladin abilities
    clabpa05 => 0 // fallen paladin abilities
    clabpr01 => 0 // generic priest abilities
    clabrn01 => 0 // generic ranger abilities
    clabrn05 => 0 // fallen ranger abilities
    clabth01 => 0 // generic thief abilities
  END

  // add kit tables dynamically by reading kitlist
  COPY_EXISTING ~kitlist.2da~ ~override~
    COUNT_2DA_ROWS ~9~ "rows"
    FOR ( index = 1 ; index < rows ; index = index + 1 ) BEGIN
      SET "exists" = 0
      READ_2DA_ENTRY "%index%" 5 9 "clab"
      DEFINE_ASSOCIATIVE_ARRAY cd_extend_clabs BEGIN "%clab%" => 0 END
    END
    BUT_ONLY

  // extend clab abilities to 50
  ACTION_PHP_EACH cd_extend_clabs AS file => foo BEGIN

    ACTION_IF FILE_EXISTS_IN_GAME ~%file%.2da~ THEN BEGIN

      COPY_EXISTING ~%file%.2da~ ~override~
        // this is adapted from argent77's a7#add_kit_ex#normalize_table to both fix and extend tables
        // https://github.com/Argent77/A7-ImprovedArcher/blob/153f3258f9b884a96ff58537175062bd6b280000/A7%23ImprovedArcher/lib/a7%23add_kit_ex.tpa#L233
        SET num_added = 0
        COUNT_2DA_COLS num_cols
        READ_2DA_ENTRIES_NOW table 1
        READ_2DA_ENTRY_FORMER table 1 0 default
        FOR (row = 0; row < table; ++row) BEGIN
          READ_2DA_ENTRY_FORMER table row 0 line
          FOR (col = 1; col < num_cols && VARIABLE_IS_SET $table(~%row%~ ~%col%~); ++col) BEGIN
            READ_2DA_ENTRY_FORMER table row col v
            TEXT_SPRINT line ~%line% %v%~
          END
          // fill in missing data
          PATCH_IF (row = 2) BEGIN  // header
            FOR (; col < 50; ++col) BEGIN
              SET col_header = col + 1
              TEXT_SPRINT line ~%line% %col_header%~
              SET num_added += 1
            END
          END ELSE PATCH_IF (row > 2) BEGIN // content
            FOR (; col < 51; ++col) BEGIN
              TEXT_SPRINT line ~%line% %default%~
              SET num_added += 1
            END
          END
          TEXT_SPRINT $lines(~%row%~) ~%line%%LNL%~
          SET $lines(~%row%~ ~size~) = STRING_LENGTH $lines(~%row%~)
        END

        // write normalized table to buffer
        PATCH_IF (num_added > 0) BEGIN
          DELETE_BYTES 0 BUFFER_LENGTH
          FOR (row = 0 pos = 0; row < table; ++row) BEGIN
            SET size = $lines(~%row%~ ~size~)
            INSERT_BYTES pos size
            WRITE_ASCIIE pos $lines(~%row%~) (size)
            SET pos += size
          END

          // attempt to populate newly extended table with meaningful entries
          PATCH_IF num_cols > 37 BEGIN // don't bother unless we're already at 40-ish columns
            COUNT_2DA_ROWS (num_cols - 1) num_rows
            FOR (col = num_cols ; col < 51 ; ++col) BEGIN
              SET entries = 0
              CLEAR_ARRAY cd_add_abilities
              SET ref_col = col - 8
              FOR (row = 0 ; row < num_rows ; ++row) BEGIN // loop of per-8-levels (leave 4 for last loop)
                READ_2DA_ENTRY row ref_col num_cols entry
                PATCH_IF (("%entry%" STRING_COMPARE_REGEXP "^[0-9]+$") AND ( // safety check to make sure we don't grab the header row
                         ("%entry%" STRING_COMPARE_CASE "AP_OHRBEAR6" = 0)
                )) BEGIN
                  PATCH_IF entries <= num_rows BEGIN
                    SET entries += 1
                    DEFINE_ASSOCIATIVE_ARRAY cd_add_abilities BEGIN ~%entry%~, ~%entries%~ => 0 END
                  END ELSE BEGIN
                    SET row = num_rows // kill loop
                  END
                END
              END
              SET ref_col = col - 10
              FOR (row = 0 ; row < num_rows ; ++row) BEGIN // loop of per-10-levels (also catches per 5)
                READ_2DA_ENTRY row ref_col num_cols entry
                PATCH_IF (("%entry%" STRING_COMPARE_REGEXP "^[0-9]+$") AND ( // safety check to make sure we don't grab the header row
                          ("%entry%" STRING_COMPARE_CASE "AP_SPCL122" = 0) OR  // +1 missile to-hit, damage (clabrn02)
                          ("%entry%" STRING_COMPARE_CASE "AP_SPCL441" = 0) OR  // +1 AC (clabth04)
                          ("%entry%" STRING_COMPARE_CASE "AP_SPCL813" = 0) OR  // +1 movement speed (clabmo01, clabmo02, clabmo03)
                          ("%entry%" STRING_COMPARE_CASE "AP_SPCL822" = 0) OR  // base AC (clabmo01, clabmo02, clabmo03)
                          ("%entry%" STRING_COMPARE_CASE "GA_OHTMPS1" = 0) OR  // holy power (ohtempus)
                          ("%entry%" STRING_COMPARE_CASE "GA_OHTMPS2" = 0) OR  // chaos of battle (ohtempus)
                          ("%entry%" STRING_COMPARE_CASE "GA_OHTYR1" = 0) OR   // exaltation (ohtyr)
                          ("%entry%" STRING_COMPARE_CASE "GA_OHTYR2" = 0) OR   // divine favor (ohtyr)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL412" = 0) OR  // set snare (clabth01, clabth02, clabth03, clabth04)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL414" = 0) OR  // set special snare (clabth03)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL621" = 0) OR  // summon spirit animal (clabdr02)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL721" = 0) OR  // storm shield (clabpr02)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL722" = 0) OR  // lightning bolt (clabpr02)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL731" = 0) OR  // seeking sword (clabpr03)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL732" = 0) OR  // true sight (clabpr03)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL741" = 0) OR  // boon of lathander (clabpr04)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL742" = 0) OR  // hold undead (clabpr04)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPSD02" = 0) OR   // shadowstep (clabth05)
                         (("%entry%" STRING_COMPARE_CASE "AP_SPCL141" = 0) AND ("%SOURCE_RES%" STRING_COMPARE_CASE "clabth04" = 0)) OR // +1 to-hit, damage (clabfi04, clabth04)
                         (("%entry%" STRING_COMPARE_CASE "GA_SPCL423" = 0) AND ("%SOURCE_RES%" STRING_COMPARE_CASE "clabpa06" = 0))    // poison weapon (clabpa06, clabth02)
                )) BEGIN
                  PATCH_IF entries <= num_rows BEGIN
                    SET entries += 1
                    DEFINE_ASSOCIATIVE_ARRAY cd_add_abilities BEGIN ~%entry%~, ~%entries%~ => 0 END
                  END ELSE BEGIN
                    SET row = num_rows // kill loop
                  END
                END
              END
              SET ref_col = col - 12
              FOR (row = 0 ; row < num_rows ; ++row) BEGIN // loop of per-10-levels (also catches per 5)
                READ_2DA_ENTRY row ref_col num_cols entry
                PATCH_IF (("%entry%" STRING_COMPARE_REGEXP "^[0-9]+$") AND NOT ( // safety check to make sure we don't grab the header rowNOT (
                          ("%entry%" STRING_COMPARE_CASE "****" = 0) OR        // blank entry
                          ("%entry%" STRING_COMPARE_CASE "AP_OHRBEAR6" = 0) OR // regen, AC
                          ("%entry%" STRING_COMPARE_CASE "AP_SPCL122" = 0) OR  // +1 missile to-hit, damage (clabrn02)
                          ("%entry%" STRING_COMPARE_CASE "AP_SPCL441" = 0) OR  // +1 AC (clabth04)
                          ("%entry%" STRING_COMPARE_CASE "AP_SPCL813" = 0) OR  // +1 movement speed (clabmo01, clabmo02, clabmo03)
                          ("%entry%" STRING_COMPARE_CASE "AP_SPCL822" = 0) OR  // base AC (clabmo01, clabmo02, clabmo03)
                          ("%entry%" STRING_COMPARE_CASE "GA_OHTMPS1" = 0) OR  // holy power (ohtempus)
                          ("%entry%" STRING_COMPARE_CASE "GA_OHTMPS2" = 0) OR  // chaos of battle (ohtempus)
                          ("%entry%" STRING_COMPARE_CASE "GA_OHTYR1" = 0) OR   // exaltation (ohtyr)
                          ("%entry%" STRING_COMPARE_CASE "GA_OHTYR2" = 0) OR   // divine favor (ohtyr)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL412" = 0) OR  // set snare (clabth01, clabth02, clabth03, clabth04)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL414" = 0) OR  // set special snare (clabth03)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL621" = 0) OR  // summon spirit animal (clabdr02)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL721" = 0) OR  // storm shield (clabpr02)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL722" = 0) OR  // lightning bolt (clabpr02)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL731" = 0) OR  // seeking sword (clabpr03)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL732" = 0) OR  // true sight (clabpr03)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL741" = 0) OR  // boon of lathander (clabpr04)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPCL742" = 0) OR  // hold undead (clabpr04)
                          ("%entry%" STRING_COMPARE_CASE "GA_SPSD02" = 0) OR   // shadowstep (clabth05)
                         (("%entry%" STRING_COMPARE_CASE "AP_SPCL141" = 0) AND ("%SOURCE_RES%" STRING_COMPARE_CASE "clabth04" = 0)) OR // +1 to-hit, damage (clabfi04, clabth04)
                         (("%entry%" STRING_COMPARE_CASE "GA_SPCL423" = 0) AND ("%SOURCE_RES%" STRING_COMPARE_CASE "clabpa06" = 0))    // poison weapon (clabpa06, clabth02)
                )) BEGIN
                  PATCH_IF entries <= num_rows BEGIN
                    SET entries += 1
                    DEFINE_ASSOCIATIVE_ARRAY cd_add_abilities BEGIN ~%entry%~, ~%entries%~ => 0 END
                  END ELSE BEGIN
                    SET row = num_rows // kill loop
                  END
                END
              END
              PATCH_IF entries > 0 BEGIN
                PATCH_PHP_EACH cd_add_abilities AS params => foo BEGIN
                  PATCH_IF params_1 <= num_rows BEGIN
                    SET_2DA_ENTRY params_1 col num_cols ~%params_0%~
                  END
                END
              END
            END // end column loop
          END // end routine to add populate table extension
          PRETTY_PRINT_2DA
        END
        BUT_ONLY

    END

  END

END

ACTION_CLEAR_ARRAY  cd_start_areas
ACTION_DEFINE_ASSOCIATIVE_ARRAY cd_start_areas BEGIN // start with base class tables
  startare => 0 // generic bard abilities
  startbp  => 0 // generic druid abilities
END

ACTION_IF FILE_EXISTS_IN_GAME ~campaign.2da~ THEN BEGIN

  COPY_EXISTING ~campaign.2da~ ~override~
    COUNT_2DA_COLS col_num
    COUNT_2DA_ROWS (col_num - 1) row_num
    FOR (index = 1 ; index < row_num ; ++index) BEGIN // start at 1 to skip header row
      READ_2DA_ENTRY index 13 13 file
      DEFINE_ASSOCIATIVE_ARRAY cd_start_areas BEGIN "%file%" => 0 END
    END
    BUT_ONLY

END

// for EE
ACTION_PHP_EACH cd_start_areas AS file => val BEGIN

  PRINT ~patching campaign file %file%.2da~

  ACTION_IF FILE_EXISTS_IN_GAME ~%file%.2da~ THEN BEGIN

    COPY_EXISTING ~%file%.2da~ ~override~
      REPLACE_TEXTUALLY ~\(START_\(MP_\)?XP_CAP[ %TAB%]+\)[0-9]+~ ~\1-1~
      BUT_ONLY

  END

END

ACTION_IF ((FILE_EXISTS_IN_GAME ~lunumab.2da~) AND (!FILE_EXISTS_IN_GAME ~spcl900.spl~)) THEN BEGIN // games with hla tables but no hlas (looking at you bgee, sod)

  COPY_EXISTING ~lunumab.2da~ ~override~
    COUNT_2DA_ROWS 5 rows
    FOR (row = 0; row < rows; ++row) BEGIN
      SET_2DA_ENTRY row 1 5 ~99~
    END
    BUT_ONLY

END
