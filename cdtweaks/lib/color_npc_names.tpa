/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                            \\\\\
///// Color NPC names - main routine                             \\\\\
/////                                                            \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

COPY_EXISTING ~mpalette.bmp~ ~override~
  READ_LONG 0x0a pixel_off
  READ_LONG 0x12 width
  READ_LONG 0x16 height
  FOR (index = 0 ; index < height ; ++index) BEGIN
    FOR (column = width - 1 ; column > 0 ; --column) BEGIN // start at dark end of band and work down until we get a light enough color
      READ_BYTE (pixel_off + 0x02 + (36 * ((height - 1) - index)) + (3 * column)) red
      READ_BYTE (pixel_off + 0x01 + (36 * ((height - 1) - index)) + (3 * column)) green
      READ_BYTE (pixel_off + 0x00 + (36 * ((height - 1) - index)) + (3 * column)) blue
      PATCH_IF ((red + green + blue) > 400) BEGIN // this is the brightness check
        SET column = "-10" // if bright enough, kill loop
      END
    END
    PATCH_IF column = 0 BEGIN // if we went through the entire row and it's stil too dark
      FOR (index3 = 1 ; index3 < 10 ; ++index3) BEGIN
        SET red = ((((255 - red) * index3) / 10) + red) // increase 10% each loop
        PATCH_IF red > 255 BEGIN SET red = 255 END
        SET green = ((((255 - green) * index3) / 10) + green) // increase 10% each loop
        PATCH_IF green > 255 BEGIN SET green = 255 END
        SET blue = ((((255 - blue) * index3) / 10) + blue) // increase 10% each loop
        PATCH_IF blue > 255 BEGIN SET blue = 255 END
        PATCH_IF ((red + green + blue) > 400) BEGIN // this is the brightness check
          SET index3 = 10 // if bright enough, kill loop
        END
      END
    END
    SET mashed = ((red << 16) + (green << 8) + (blue << 0) + (0xff << 24))
    SPRINTF smashed "%x" (mashed)
    SPRINT $cdtextcolors(~%index%~) ~%smashed%~
  END
  BUT_ONLY

INCLUDE ~cdtweaks/lib/joinable_npc_array.tpa~

ACTION_PHP_EACH JOINABLE_NPC_ARRAY AS file => dv BEGIN

  ACTION_IF !IS_AN_INT dv BEGIN // joinable NPC

    COPY_EXISTING ~%file%~ ~override~
      READ_LONG 0x08 name_strref
      READ_LONG 0x0c tool_strref
      PATCH_IF ("%SOURCE_RES%" STRING_COMPARE_CASE "wilson9" = 0) BEGIN // wilson soa is "grizzly bear"
        SET name_strref = 86478
        SET tool_strref = 86478
      END ELSE
      PATCH_IF ("%SOURCE_RES%" STRING_COMPARE_REGEXP "^[Bb][Rr][Aa][Nn][Ww][Ee][0-9]?$" = 0) BEGIN // branwen is "statue"
        PATCH_IF game_is_eet BEGIN
          SET name_strref = 209499
          SET tool_strref = 209499
        END ELSE BEGIN
          SET name_strref = 9499
          SET tool_strref = 9499
        END
      END
      SET $cd_exclude("%name_strref%") = 1 // want to exclude name
      SET $cd_exclude("%tool_strref%") = 1 // want to exclude tooltip
      GET_STRREF name_strref name
      READ_BYTE   0x2e color
      SPRINT textcolor $cdtextcolors(~%color%~)
      DEFINE_ASSOCIATIVE_ARRAY cd_text_colors BEGIN ~%name%~ => ~%textcolor%~ END
      TO_UPPER name
      DEFINE_ASSOCIATIVE_ARRAY cd_text_colors BEGIN ~%name%~ => ~%textcolor%~ END
      BUT_ONLY

  END

END

/*
I had considered adding colors to "notable" NPCs, but there's just no clear definition of notable that
I could consistently apply, so we'll just leave this here.
ACTION_FOR_EACH creature IN
  ~%tutu_var%gorion~ ~%tutu_var%elmin2~ ~%tutu_var%volo~ ~%tutu_var%sarevo~ ~%tutu_var%scar~ ~%tutu_var%deltan~ ~%tutu_var%belt~
  ~%tutu_var%liia~ ~%tutu_var%mulahe~ ~%tutu_var%tranzi~ ~%tutu_var%davaeo~ ~%tutu_var%angelo~ ~%tutu_var%halbaz~
BEGIN

  COPY_EXISTING ~%creature%.cre~ ~override~
    READ_STRREF 0x08 name
    READ_BYTE   0x2e color
    SPRINT textcolor $cdtextcolors(~%color%~)
    DEFINE_ASSOCIATIVE_ARRAY cd_text_colors BEGIN ~%name%~ => ~%textcolor%~ END
    //PATCH_PRINT ~adding to array %name% => %textcolor%~
    BUT_ONLY IF_EXISTS

END
*/

//ACTION_PHP_EACH cd_text_colors AS name => color BEGIN // debug code used to generate the 'customize' file
//  PRINT "//  ~%name%~ => ~%color%~"
//END

INCLUDE ~cdtweaks/lib/color_npc_names_customize.tpa~ // allow for player to customize

OUTER_SET final_strref = NEXT_STRREF - 1
PRINT @1

ACTION_IF FILE_EXISTS ~lang/%EE_LANGUAGE%/dialogf.tlk~ BEGIN OUTER_SET ftlk = 1 END ELSE BEGIN OUTER_SET ftlk = 0 END

OUTER_FOR (index = 0 ; index <= final_strref ; ++index) BEGIN

  ACTION_IF index AND ((index MODULO 10000) = 0) BEGIN // ping every 10000 strings, except 0
    PRINT @419002
  END

  ACTION_IF !VARIABLE_IS_SET $cd_exclude("%index%") BEGIN

    ACTION_GET_STRREF   index stringm

    OUTER_INNER_PATCH_SAVE string2m ~%stringm%~ BEGIN

      PATCH_PHP_EACH cd_text_colors AS name => color BEGIN
        REPLACE_TEXTUALLY CASE_SENSITIVE ~\b\(%name%\)\b~ ~^%color%\1^-~
      END

    END

    ACTION_IF ftlk BEGIN

      ACTION_GET_STRREF_F index stringf

      OUTER_INNER_PATCH_SAVE string2f ~%stringf%~ BEGIN

        PATCH_PHP_EACH cd_text_colors AS name => color BEGIN
          REPLACE_TEXTUALLY ~\b\(%name%\)~ ~^%color%\1^-~
        END

      END

    END ELSE BEGIN

      OUTER_SPRINT stringf  ~~
      OUTER_SPRINT string2f ~~

    END

    ACTION_IF (("%stringm%" STRING_COMPARE_CASE "%string2m%") OR     // male string changes
               ("%stringf%" STRING_COMPARE_CASE "%string2f%")) BEGIN // female string changes

      ACTION_GET_STRREF_S index sound

      ACTION_IF ftlk BEGIN
        STRING_SET_EVALUATE index ~%string2m%~ ~%string2f%~ [%sound%]
      END ELSE BEGIN
        STRING_SET_EVALUATE index ~%string2m%~ [%sound%]
      END

    END

  END

END
