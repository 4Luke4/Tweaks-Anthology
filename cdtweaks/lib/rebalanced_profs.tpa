OUTER_SPRINT prof_text_match @216007
OUTER_SPRINT prof_text       @216008

DEFINE_PATCH_MACRO ~prof_descripts~ BEGIN

  SPRINT new_weap ""
  PATCH_IF ("%prof%" = 91) BEGIN // short swords/ninja-tos
    SPRINT new_weap ~%ssword%/%ninjato%~
  END ELSE
  PATCH_IF ("%prof%" = 94) BEGIN // katanas/wakizashis
    SPRINT new_weap ~%katana%/%waki%~
  END ELSE
  PATCH_IF ("%prof%" = 95) BEGIN // scimitars
    SPRINT new_weap ~%scimitar%~
  END ELSE
  PATCH_IF ("%prof%" = 101) BEGIN // morningstars/maces
    SPRINT new_weap ~%mace%/%mstar%~
  END ELSE BEGIN // flails
    SPRINT new_weap ~%flail%~
  END
  PATCH_IF ("%new_weap%" STRING_COMPARE_CASE "") BEGIN // make sure new_weap is actually set before blindly patching
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~%prof_text_match%.+$~ ~%prof_text% %new_weap%~
  END

END

// since ee uses funky encoding, we'll read in the weapon names dynamically
ACTION_GET_STRREF  6337 mace
ACTION_GET_STRREF  6704 flail_temp
ACTION_GET_STRREF  6745 ssword_temp
ACTION_GET_STRREF  6853 mstar
ACTION_GET_STRREF  7523 katana
ACTION_GET_STRREF  7526 waki
ACTION_GET_STRREF  7529 ninjato
ACTION_GET_STRREF 11052 scimitar

ACTION_IF game_is_bgee BEGIN // ee has different strrefs for eastern stuff
  ACTION_GET_STRREF 26716 waki
  ACTION_GET_STRREF 26711 katana
  ACTION_GET_STRREF 26721 ninjato
END

OUTER_INNER_PATCH_SAVE ssword ~%ssword_temp%~ BEGIN // generic short sword string has trailing space, messing up matching below
  REPLACE_TEXTUALLY ~\(.+\) +$~ ~\1~ // remove trailing space
END

OUTER_INNER_PATCH_SAVE flail ~%flail_temp%~ BEGIN // generic flail string has trailing space, messing up matching below
  REPLACE_TEXTUALLY ~\([^ ]+\) *~ ~\1~ // remove trailing space
END

// since morning star can also be morningstar, we dance a little for the matches
ACTION_IF ("%LANGUAGE%" STRING_COMPARE_CASE "ENGLISH" = 0) BEGIN
  OUTER_SPRINT mstar1 "Morning"
  OUTER_SPRINT mstar2 "star"
END ELSE BEGIN
  ACTION_GET_STRREF  6853 mstar1
  OUTER_SPRINT mstar2 ""
END

// one more bit of hackery for that damned ninja-to (thanks to argent77)
OUTER_TEXT_SPRINT ninjato_special ~Ninja-?t..~
OUTER_PATCH_SAVE ninjato_special ~%ninjato_special%~ BEGIN
  WRITE_SHORT (STRING_LENGTH ~%ninjato_special%~ - 2) 0x8dc5   // utf-8 code of "lowercase O with macron"
END

//item changes
PRINT @1
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~ // item changes
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN // protects against invalid files
    SET orig_prof = 0
    READ_ASCII 0x22 "anim" (2)
    READ_BYTE  0x31 "prof"
    PATCH_IF ("%prof%" = 100 AND ("%anim%" STRING_COMPARE_REGEXP "[Mm][SsCc2]" = 0)) BEGIN // morningstars
      SET prof = 101
      SET orig_prof = 100
    END ELSE
    PATCH_IF (("%prof%" = 95) AND ("%anim%" STRING_COMPARE_CASE "s1" = 0)) BEGIN // ninja-tos
      SET prof = 91
      SET orig_prof = 95
    END ELSE
    PATCH_IF (("%prof%" = 95) AND ("%anim%" STRING_COMPARE_CASE "ss" = 0)) BEGIN // wakizashis
      SET prof = 94
      SET orig_prof = 95
    END
    PATCH_IF orig_prof BEGIN
      WRITE_BYTE 0x31 prof // set new proficiency
      // if the item has a 233, adjust it as well
      READ_LONG   0x64 "abil_off" ELSE 0
      READ_SHORT  0x68 "abil_num" ELSE 0
      READ_LONG   0x6a "fx_off"   ELSE 0
      SET "counter_offset" = 0x70
      SET "abil_length" = 0x38
      SET "global_loop" = 1
      SET "fx_type" = 0
      SET "min_size" = 0x72
      FOR (index = (0 - global_loop) ; index < abil_num ; index = index + 1) BEGIN
        PATCH_IF ("%index%" < 0) BEGIN // if loop through globals needed
          SET "abil_fx_idx" = 0
        END ELSE BEGIN // otherwise normal ability
          SET "counter_offset" = ("%abil_off%" + 0x1e + ("%abil_length%" * "%index%"))
          READ_SHORT  ("%abil_off%" + 0x20 + ("%abil_length%" * "%index%")) "abil_fx_idx"
        END
        READ_SHORT "%counter_offset%" "counter" // fx_num on global loop, otherwise abil_fx_num
        FOR (index2 = 0 ; index2 < counter ; index2 = index2 + 1) BEGIN
          READ_SHORT ("%fx_off%"        + (0x08 * "%fx_type%") + (("%abil_fx_idx%" + "%index2%") * (0x30 + (0xd8 * "%fx_type%")))) "opcode"
          PATCH_IF (opcode = 233) BEGIN
            READ_SHORT  ("%fx_off%" + 0x08 + (0x10 * "%fx_type%") + (("%abil_fx_idx%" + "%index2%") * (0x30 + (0xd8 * "%fx_type%")))) "param2"
            PATCH_IF (param2 = orig_prof) BEGIN
              WRITE_SHORT ("%fx_off%" + 0x08 + (0x10 * "%fx_type%") + (("%abil_fx_idx%" + "%index2%") * (0x30 + (0xd8 * "%fx_type%")))) prof
            END
          END
        END
      END
    END
    PATCH_IF ((prof = 91) OR (prof = 94) OR (prof = 95) OR (prof = 100) OR (prof = 101)) BEGIN
      // update descriptions
      PATCH_FOR_EACH offset IN 0x50 0x54 BEGIN
        READ_STRREF ~%offset%~ desc
        PATCH_IF ("%desc%" STRING_COMPARE_REGEXP ~<Invalid Strref -?[0-9]+>~) BEGIN // checking for valid content in string
          INNER_PATCH_SAVE desc ~%desc%~ BEGIN
            LAUNCH_PATCH_MACRO ~prof_descripts~
          END
          SAY_EVALUATED ~%offset%~ ~%desc%~ // write changes
        END
      END
    END
  END
  BUT_ONLY

COPY_EXISTING ~weapprof.2da~ ~override~
  SET_2DA_ENTRY 11 2 51 ~cdssname~
  SET_2DA_ENTRY 11 3 51 ~cdssdescript~
  SET_2DA_ENTRY 14 2 51 ~cdkatname~
  SET_2DA_ENTRY 14 3 51 ~cdkatdescript~
  SET_2DA_ENTRY 15 2 51 11052
  SET_2DA_ENTRY 15 3 51 ~cdscimdescript~
  SET_2DA_ENTRY 21 2 51 6704
  SET_2DA_ENTRY 21 3 51 ~cdfldescript~
  SET_2DA_ENTRY 22 2 51 ~cdmacename~
  SET_2DA_ENTRY 22 3 51 ~cdmacedescript~
  REPLACE ~cdssname~       @216009
  REPLACE ~cdssdescript~   @216001
  REPLACE ~cdkatname~      @216010
  REPLACE ~cdkatdescript~  @216002
  REPLACE ~cdscimdescript~ @216003
  REPLACE ~cdfldescript~   @216004
  REPLACE ~cdmacename~     @216011
  REPLACE ~cdmacedescript~ @216005
  BUT_ONLY

// if Maurolava's samurai kit is installed, old version
// only wants katanas and wakizashis; since they're now combined need to remove scimitars for the kit
ACTION_FOR_EACH kitname IN samurai mlsamura BEGIN

  ACTION_IF FILE_EXISTS_IN_GAME ~%kitname%.2da~ THEN BEGIN

    // find samurai kit in kitlist
    COPY_EXISTING ~kitlist.2da~ ~override~
      COUNT_2DA_ROWS ~9~ "rows"
      FOR ( index = 31 ; index < rows ; index = index + 1 ) BEGIN
        READ_2DA_ENTRY "%index%" 5 9 "clab"
        PATCH_IF ("%clab%" STRING_COMPARE_CASE "%kitname%" = 0) BEGIN
          SET "samurai" = "%index%"
          SET "rows" = 0 // kills loop
        END
      END
      BUT_ONLY

    COPY_EXISTING ~weapprof.2da~ ~override~
      SET_2DA_ENTRY 14 ("%samurai%" + 22) ("%samurai%" + 23) 1
      BUT_ONLY

  END

END
