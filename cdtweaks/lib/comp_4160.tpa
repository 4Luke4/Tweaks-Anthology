/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// Let Yeslick use axes                             \\\\\
///// (SCS borrowing)                                  \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

ACTION_IF !(MOD_IS_INSTALLED "EEex.tp2" 0) BEGIN
  COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
    READ_SHORT 0x1c type
    PATCH_IF type = 25 BEGIN
      WRITE_LONG 0x1e (THIS BAND `BIT14) // removes f/c flag
    END
    BUT_ONLY

  COPY_EXISTING ~clasweap.2da~ ~override~	//add axe general-weapon type to fighter-cleric
    REPLACE_TEXTUALLY ~^\(FIGHTER_CLERIC[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+\)[^ %TAB%]+~ ~\11~

  OUTER_SET profmax = 2
  ACTION_IF MOD_IS_INSTALLED ~cdtweaks/setup-cdtweaks.tp2~ ~2200~ THEN BEGIN OUTER_SET profmax = 5 END // multiclass grandmastery

  COPY_EXISTING ~weapprof.2da~ ~override~ //give fighter-clerics the ability to specialise in axes
    REPLACE_TEXTUALLY ~^\(AXE[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+[^ %TAB%]+[ %TAB%]+\)[^ %TAB%]+~
      ~\1%profmax%~
    IF_EXISTS 
END ELSE BEGIN
  // [Luke]
  WITH_SCOPE BEGIN

    INCLUDE "cdtweaks\argent\add_kit_ex.tph"
    INCLUDE "cdtweaks\luke\lib\install.tph"
    //
    WITH_TRA "cdtweaks\languages\english\gt_yeslick_axes.tra" "cdtweaks\languages\%LANGUAGE%\gt_yeslick_axes.tra" BEGIN
      // lua magic
      WITH_SCOPE BEGIN
        OUTER_SET "feedback_strref" = RESOLVE_STR_REF (@0)
        //
        LAF "APPEND_LUA_CHUNK"
        STR_VAR
          "description" = "Joinable NPC Tweaks"
          "sourceFileSpec" = "cdtweaks\luke\lua\npc\yeslick.lua"
          "destRes" = "m_gt#npc"
        END
      END
      
      // let us add a new dummy fighter/cleric kit that can put pips in axes
      WITH_SCOPE BEGIN
        OUTER_SET "profmax" = 2
        ACTION_IF MOD_IS_INSTALLED ~cdtweaks/setup-cdtweaks.tp2~ ~2200~ BEGIN
          OUTER_SET "profmax" = 5 // multiclass grandmastery
        END
        
        OUTER_SET ykit = 0
        // put lk# versions first since they come with a custom kit as an install option; on eet this means it'll backport to bgee yeslick
        COPY_EXISTING ~lk#yesl.cre~  ~override~ // pixel drain/kaeloree/lava yeslick bg2 npc mod
                      ~lk#yes25.cre~ ~override~ // pixel drain/kaeloree/lava yeslick bg2 npc mod
                      ~7xcre2.cre~   ~override~ // bg1 npcs in soa yeslick
                      ~yeslid.cre~   ~override~ // bgee yeslick
                      ~yeslic.cre~   ~override~ // bgee yeslick
                      ~yeslic5.cre~  ~override~ // bgee yeslick
          PATCH_IF IS_AN_INT ykit BEGIN // if we haven't already found a kit
            READ_SHORT 0x246 yeslick_kit
            PATCH_IF ((yeslick_kit != 0) AND (yeslick_kit != 0x4000)) BEGIN 
              LOOKUP_IDS_SYMBOL_OF_INT ykit ~kit~ "%yeslick_kit%"
            END
          END           
          BUT_ONLY IF_EXISTS
        
        ACTION_IF IS_AN_INT ykit BEGIN // unkitted yeslick - clone base f/c into new yeslick-only kit
                
          //
          LAF "ADD_KIT_EX"
          INT_VAR
            "kit_class" = IDS_OF_SYMBOL ("class" "FIGHTER_CLERIC")
            "mixed" = RESOLVE_STR_REF (@1)
            "visible" = 0 // not available to PCs
          STR_VAR
            "kit_name" = "CDTWEAKS_YESLICK_AXES"
          END
          
        END ELSE BEGIN // kitted yeslick - clone existing yeslick kit into new axe-wielding yeslick kit
        
          LAF "ADD_KIT_EX"
          INT_VAR
            //"kit_class" = IDS_OF_SYMBOL ("class" "FIGHTER_CLERIC")
            //"mixed" = RESOLVE_STR_REF (@1)
            "visible" = 0 // not available to PCs
          STR_VAR
            "source_kit" = EVAL ~%ykit%~
            "kit_name" = "CDTWEAKS_YESLICK_AXES"
          END
          
        END   
        
        //
        COPY_EXISTING - "kitlist.2da" "override"
          COUNT_2DA_COLS "cols"
          READ_2DA_ENTRIES_NOW "read_kitlist" "%cols%"
          FOR ("i" = 0 ; "%i%" < "%read_kitlist%" ; "i" += 1) BEGIN
            READ_2DA_ENTRY_FORMER "read_kitlist" "%i%" 1 "kit_name"
            PATCH_IF ("%kit_name%" STR_EQ "CDTWEAKS_YESLICK_AXES") BEGIN
              READ_2DA_ENTRY_FORMER "read_kitlist" "%i%" 6 "proficiency"
              SET "i" = "%read_kitlist%" // kill for-loop
            END
          END
          BUT_ONLY
        
        //
        COPY_EXISTING "weapprof.2da" "override"
          COUNT_2DA_COLS "cols"
          READ_2DA_ENTRIES_NOW "read_weapprof" "%cols%"
          FOR ("i" = 0 ; "%i%" < "%read_weapprof%" ; "i" += 1) BEGIN
            READ_2DA_ENTRY_FORMER "read_weapprof" "%i%" 0 "prof_name"
            PATCH_IF ("%prof_name%" STR_EQ "AXE") BEGIN
              SET_2DA_ENTRY "%i%" (proficiency + 1) "%cols%" "%profmax%"
            END
          END
          BUT_ONLY
          
      END // WITH_SCOPE
      
      // update CREs
      COPY_EXISTING ~lk#yesl.cre~  ~override~ // pixel drain/kaeloree/lava yeslick bg2 npc mod
                    ~lk#yes25.cre~ ~override~ // pixel drain/kaeloree/lava yeslick bg2 npc moc
                    ~7xcre2.cre~   ~override~ // bg1 npcs in soa yeslick
                    ~yeslic.cre~   ~override~ // bgee yeslick
                    ~yeslic5.cre~  ~override~ // bgee yeslick
                    ~yeslid.cre~   ~override~ // bgee yeslick
        WRITE_SHORT 0x244 (IDS_OF_SYMBOL ("kit" "CDTWEAKS_YESLICK_AXES") >> 16) & 0xFFFF
        WRITE_SHORT 0x246 (IDS_OF_SYMBOL ("kit" "CDTWEAKS_YESLICK_AXES") & 0xFFFF)
        BUT_ONLY IF_EXISTS
        
    END // WITH_SCOPE
  END // WITH_TRA
END // eeex

