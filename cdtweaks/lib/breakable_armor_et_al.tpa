
ACTION_IF game_is_totsc BEGIN // bg1 does this differently since there's no effect-on-hit opcode

  // PHASE #1 - adds opcode to selected armor/shield/helm, which change stat TRACKING (unused in original game) to 1,2,4 respectively, while equipped. 
  // So we can tell the scripts, if the non-magic armor part is equipped. With disposable in BG1 script's triggers we can only check, if the person 
  // has the item, but not, if the item is equipped or just in inventory. Opcode "store local variable" is not so good, because local variable is set 
  // permanently while an item is equipping, and doesn't return to 0 itself, if the item is unequipped.

  APPEND ~action.ids~ ~160 ApplySpellRES(S:ResRef*,O:Target*)~       UNLESS ~ApplySpellRES~ // needed action
  
  // tracking effect added to items in mutual code section

  //PHASE #2 - script on party-NPC, which on conditions (person was hit, person is wearing an item that sets tracking to value > 0) with small 
  //probability applies a spell to the person. The script DPLAYER3 works continuous on Player1 (all party in multiplayer), but DPLAYER2 could be 
  //turned off with Party AI off. So we must add the script's blocks also to all OVERRIDE scripts of all joinable NPCs, also from mods. There is 
  //unfortunately no possibility to check all party members from DPLAYER3, because trigger HitBy() can be proof only in script on active creature.
  ACTION_FOR_EACH script IN dplayer2 dplayer3 ajantis alora branwen coran dynaheir edwin eldoth faldorn garrick imoen jaheira khalid
    kagain kivan minsc montaron quayle safana sharteel skie tiax viconia xan xzar yeslick BEGIN // scripts for regular NPCs, so no existance check

    EXTEND_BOTTOM ~%script%.bcs~ ~cdtweaks/baf/bg1_break.baf~
  
  END

  ACTION_FOR_EACH script IN amorth aval01 bardo brager bub concho ferthgil jetlaya keiria skeezer thorf willsc wolfshd BEGIN // scripts for NPCs, so existance check included
  
    ACTION_IF FILE_EXISTS_IN_GAME ~%script%.bcs~ THEN BEGIN

      EXTEND_BOTTOM ~%script%.bcs~ ~cdtweaks/baf/bg1_break.baf~
    
    END

  END
  
  //7 NPCs from BG1 don't have OVERRIDE script
  COPY_EXISTING_REGEXP GLOB ~^alora[0-9]*\.cre$~ ~override~
      WRITE_ASCII SCRIPT_OVERRIDE ~alora~
      READ_ASCII SCRIPT_CLASS ~Class_Script_Name~ //Alora has already script ~alora.BCS~ but on CLASS position and with bad blocks
      PATCH_IF ( ~%Class_Script_Name%~ STRING_EQUAL_CASE ~alora~ ) THEN BEGIN  WRITE_ASCII SCRIPT_CLASS ~~ #8  END
    BUT_ONLY
  
  // delete broken junk in alora's script while we're here
  COPY_EXISTING ~alora.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
      REPLACE_TEXTUALLY ~TimeOfDay(DAY)~ ~False()~
    END
    BUT_ONLY
  
  COPY_EXISTING_REGEXP GLOB ~^branwe[0-9]*\.cre$~ ~override~
      WRITE_ASCII SCRIPT_OVERRIDE ~branwen~
    BUT_ONLY
  
  COPY_EXISTING_REGEXP GLOB ~^faldor[0-9]*\.cre$~ ~override~
      WRITE_ASCII SCRIPT_OVERRIDE ~faldorn~
    BUT_ONLY
  
  COPY_EXISTING_REGEXP GLOB ~^garric[0-9]*\.cre$~  ~override~
      WRITE_ASCII SCRIPT_OVERRIDE ~garrick~
     BUT_ONLY
  
  COPY_EXISTING_REGEXP GLOB ~^imoen[0-9]+\.cre$~   ~override~ // imoen1,2,4,6.CRE but not imoen.CRE
      WRITE_ASCII SCRIPT_OVERRIDE ~imoen~
    BUT_ONLY
  
  COPY_EXISTING_REGEXP GLOB ~^skie[0-9]*\.cre$~    ~override~
      WRITE_ASCII SCRIPT_OVERRIDE ~skie~
    BUT_ONLY
  
  COPY_EXISTING_REGEXP GLOB ~^xan[0-9]*\.cre$~     ~override~
      WRITE_ASCII SCRIPT_OVERRIDE ~xan~ #8
    BUT_ONLY
  
  //PHASE #3 - spell casted from scripts changes the item to the broken one and displays the massage. I don't know, 
  //why in TUTU solution helms are handled different than armors and shields (broken armor and shield replace the 
  //armor/shield direct in their equipping slot, but "broken item", that replace helm, is created in inventory, and 
  //helm slot remains empty). If you prefer version from TUTU solution, I can modify this part of component.
  // done in mutual code section

END

COPY_EXISTING ~misc59.itm~ ~override/cddelhlm.itm~

// bgee freaks out with misc items in shield/armor/helmet slots
ACTION_IF enhanced_edition BEGIN // bgee, eet

  COPY_EXISTING ~misc57.itm~ ~override~ // broken shield
    WRITE_SHORT 0x1c 12
    WRITE_LONG  0x1e `0
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 206 target = 1 parameter1 = `0 timing = 2 STR_VAR resource = cdbrak12 END
    BUT_ONLY

  COPY_EXISTING ~misc58.itm~ ~override~ // broken armor
    WRITE_SHORT 0x1c 2
    WRITE_LONG  0x1e `0
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 206 target = 1 parameter1 = `0 timing = 2 STR_VAR resource = cdbrak2 END
    BUT_ONLY

  COPY_EXISTING ~cddelhlm.itm~ ~override~ // broken helmet
    WRITE_SHORT 0x1c 7
    WRITE_LONG  0x1e `0
    LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 206 target = 1 parameter1 = `0 timing = 2 STR_VAR resource = cdbrak7 END
    BUT_ONLY

  COPY_EXISTING ~bprng1.itm~ ~override~ // slave ring from black pits - prevents weapon breakage; add armor/helm/shield
    PATCH_FOR_EACH int IN 2 7 12 BEGIN
      LPF CLONE_EFFECT INT_VAR match_opcode = 206 multi_match = 1 STR_VAR resource = EVAL ~cdbrak%int%~ END
    END  
    BUT_ONLY

END

COPY ~cdtweaks/spl/cdbreak1.spl~ ~override/cdbrak2.spl~ // armor
  SET msg = RESOLVE_STR_REF(@106001)
  LPF ALTER_EFFECT INT_VAR match_opcode = 139 parameter1 = msg END

COPY_EXISTING ~cdbrak2.spl~ ~override/cdbrak7.spl~  // helm
  SET msg = RESOLVE_STR_REF(@106003)
  LPF ALTER_EFFECT INT_VAR match_opcode = 139 parameter1 = msg END
  LPF ALTER_EFFECT INT_VAR match_opcode = 143 parameter1 = 6 STR_VAR resource = ~cddelhlm~ END

COPY_EXISTING ~cdbrak2.spl~ ~override/cdbrak12.spl~  // shield
  SET msg = RESOLVE_STR_REF(@106002)
  LPF ALTER_EFFECT INT_VAR match_opcode = 139 parameter1 = msg END
  LPF ALTER_EFFECT INT_VAR match_opcode = 143 parameter1 = 9 STR_VAR resource = ~misc57~ END

ACTION_IF NOT ((enhanced_edition) OR (MOD_IS_INSTALLED ~tobex/tobex.tp2~ ~100~)) BEGIN // if no critical hit aversion from tobex, script to remove broken helm item

  COPY_EXISTING ~cdbrak7.spl~ ~override~  // create broken misc in inventory
    LPF ADD_SPELL_EFFECT INT_VAR opcode = 122 target = 1 parameter1 = 1 timing = 1 insert_point = 999 STR_VAR resource = misc59 END
    LPF CLONE_EFFECT INT_VAR match_opcode = 143 opcode = 112 STR_VAR insert = last END

END ELSE BEGIN // otherwise add flag to disable critical hit protection for broken helmet

  COPY_EXISTING ~cddelhlm.itm~ ~override~ // broken helmet
    WRITE_BYTE 0x1b THIS | BIT1

END

// give nonmagical iron armor/shield/helmets a chance to break when attacked
ACTION_FOR_EACH file IN
  // helmets
  ~_helm01.itm~ ~_helm08.itm~ ~_helm09.itm~ ~_helm10.itm~ ~_helm11.itm~ ~_helm12.itm~ ~_helm13.itm~
  ~_helm15.itm~ ~_ihelm01.itm~ ~_ihelm10.itm~ ~dhelm01.itm~ ~elfhelm.itm~ ~helm01.itm~ ~helm08.itm~
  ~helm09.itm~ ~helm10.itm~ ~helm11.itm~ ~helm12.itm~ ~helm13.itm~ ~helm15.itm~ ~helm22.itm~
  ~helmskwa.itm~ ~ihelm01.itm~ ~ihelm10.itm~ 
  // shields
  ~_ishld03.itm~ ~_shld01.itm~ ~_shld03.itm~ ~_shld05.itm~ ~_shld08.itm~ ~_shld09.itm~ ~_shld10.itm~
  ~_shld11.itm~ ~_shld12.itm~ ~_shld13.itm~ ~_shld14.itm~ ~_shld15.itm~ ~_shld16.itm~ ~_shld18.itm~
  ~_shld99.itm~ ~dshld01.itm~ ~ishld03.itm~ ~shld01.itm~ ~shld03.itm~ ~shld05.itm~ ~shld08.itm~
  ~shld09.itm~ ~shld10.itm~ ~shld11.itm~ ~shld12.itm~ ~shld13.itm~ ~shld14.itm~ ~shld15.itm~
  ~shld16.itm~ ~shld18.itm~ ~shld99.itm~
  // metal armor
  ~_chan01.itm~ ~_chan04.itm~ ~_ichan01.itm~ ~_ichan04.itm~ ~_iplat01.itm~ ~_plat01.itm~ 
  ~_plat04.itm~ ~_plat07.itm~ ~_plat98.itm~ ~chan01.itm~ ~chan04.itm~ ~ichan01.itm~ ~ichan04.itm~
  ~iplat01.itm~ ~plat01.itm~ ~plat04.itm~ ~plat07.itm~ ~plat98.itm~ ~plat99.itm~ ~vischan1.itm~
  ~vischan2.itm~ ~visplat1.itm~
  BEGIN

  ACTION_IF FILE_EXISTS_IN_GAME ~%file%~ THEN BEGIN

    COPY_EXISTING ~%file%~ ~override~
      READ_SHORT  0x1c type
      PATCH_IF game_is_totsc = 1 BEGIN
        PATCH_IF (type =  2) BEGIN SET track = 1 END ELSE // if armor tracking value 1
        PATCH_IF (type = 12) BEGIN SET track = 2 END ELSE // if shield tracking value 2
                             BEGIN SET track = 4 END      // if helm tracking value 4
        LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 95 target = 1 timing = 2 parameter1 = track END // tracking value lets us do this via script
      END ELSE BEGIN
        LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 232 target = 1 timing = 2 STR_VAR resource = EVAL "cdbrak%type%" END
      END
      BUT_ONLY

  END

END