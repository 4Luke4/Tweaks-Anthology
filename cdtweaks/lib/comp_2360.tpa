/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                            \\\\\
///// Remove Racial Restrictions for Single Classes              \\\\\
/////                                                            \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

ACTION_CLEAR_ARRAY cd_new_anims
ACTION_DEFINE_ASSOCIATIVE_ARRAY cd_new_anims BEGIN
  6001, 6501, CEMC, CEMM => monk_male_elf       // clone cleric animations into monk animations
  6002, 6502, CDMC, CDMM => monk_male_dwarf
  6003, 6503, CIMC, CIMM => monk_male_halfling
  6004, 6504, CGMC, CGMM => monk_male_gnome
  6011, 6511, CEFC, CEFM => monk_female_elf
  6012, 6512, CDFC, CDFM => monk_female_dwarf
  6013, 6513, CIFC, CIFM => monk_female_halfling
  6014, 6514, CIFC, CIFM => monk_female_gnome
  6003, 6203, CIMC, CIMW => mage_male_halfling   // clone cleric animations into mage animations (halflings only)
  6013, 6213, CIFC, CIFW => mage_female_halfling
END

ACTION_IF !MOD_IS_INSTALLED ~artisanskitpack/artisanskitpack.tp2~ ~10001~ THEN BEGIN // don't overwrite half-orc monk animations from artisan's kitpack

  ACTION_DEFINE_ASSOCIATIVE_ARRAY cd_new_anims BEGIN
    6005, 6505, COMC, COMM => monk_male_halforc
    6015, 6515, COFC, COFM => monk_female_halforc
  END

END

ACTION_PHP_EACH cd_new_anims AS anims => entry BEGIN

  APPEND ~animate.ids~ ~0x%anims_1% %entry%~ UNLESS ~^0x%anims_1%~

  ACTION_IF enhanced_edition BEGIN

    COPY_EXISTING ~%anims_0%.ini~ ~override/%anims_1%.ini~
      REPLACE_TEXTUALLY ~^\(// [A-Z]+[ %TAB%]\)cleric_[a-z]+_[a-z]+$~ ~\1%entry%~

  END ELSE BEGIN

    COPY_EXISTING_REGEXP GLOB ~^%anims_2%\(.+\)\.bam$~ ~override/%anims_3%\1.bam~
                              ~^%anims_2%\(.+\)\.plt$~ ~override/%anims_3%\1.plt~
      IF_EXISTS // in case there are no plts

  END

END

COPY_EXISTING ~clsrcreq.2da~ ~override~
  COUNT_2DA_ROWS 8 rows
  FOR (row = 0 ; row < rows ; ++row) BEGIN
    READ_2DA_ENTRY row 0 8 entry
    PATCH_IF (("%entry%" STRING_COMPARE_CASE "MAGE"      = 0) OR
              ("%entry%" STRING_COMPARE_CASE "FIGHTER"   = 0) OR
              ("%entry%" STRING_COMPARE_CASE "BARBARIAN" = 0) OR
              ("%entry%" STRING_COMPARE_CASE "CLERIC"    = 0) OR
              ("%entry%" STRING_COMPARE_CASE "THIEF"     = 0) OR
              ("%entry%" STRING_COMPARE_CASE "BARD"      = 0) OR
              ("%entry%" STRING_COMPARE_CASE "PALADIN"   = 0) OR
              ("%entry%" STRING_COMPARE_CASE "DRUID"     = 0) OR
              ("%entry%" STRING_COMPARE_CASE "RANGER"    = 0) OR
              ("%entry%" STRING_COMPARE_CASE "SORCERER"  = 0) OR
              ("%entry%" STRING_COMPARE_CASE "MONK"      = 0) OR
              ("%entry%" STRING_COMPARE_CASE "SHAMAN"    = 0)) BEGIN
      FOR (col = 2; col < 8 ; ++col) BEGIN
        SET_2DA_ENTRY row col 8 1
      END
    END
  END
  PRETTY_PRINT_2DA
  BUT_ONLY

OUTER_SET col_start = 0
ACTION_IF enhanced_edition BEGIN // ee has an extra column at the front
  OUTER_SET col_start = 1
END

COPY_EXISTING ~mgsrcreq.2da~ ~override~
  FOR (col = (col_start + 1); col < (col_start + 8) ; ++col) BEGIN
    SET_2DA_ENTRY 0 col (col_start + 8) 1
  END
  SET_2DA_ENTRY 0 (col_start + 6) (col_start + 8) 0 // keep mage/gnome = 0
  PRETTY_PRINT_2DA
  BUT_ONLY

// let dwarves get 17 CHR to be paladins
COPY_EXISTING ~abracead.2da~ ~override~
  READ_2DA_ENTRY 1 6 7 foo
  PATCH_IF (foo < "-1") THEN BEGIN
    SET_2DA_ENTRY  1 6 7 "-1"
  END
  // let half-orcs get 17 INT so they can dual to mages, config-only option
  PATCH_IF ((VARIABLE_IS_SET halforc_dual_to_mage) AND (halforc_dual_to_mage = 1)) BEGIN
    READ_2DA_ENTRY 6 4 7 foo
    PATCH_IF (foo < "-1") THEN BEGIN
      SET_2DA_ENTRY  6 4 7 "-1"
    END
  END
  PRETTY_PRINT_2DA
  BUT_ONLY
