/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// Removable NPC Items                              \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

// some special stuff for edwin; move the amulet effects directly to edwin
COPY_EXISTING ~misc89.itm~                         ~override~ // bg2
              ~%tutu_scriptbg%misc89%eet_var%.itm~ ~override~ // tutu or eet version
  LPF DELETE_EFFECT INT_VAR match_opcode = 42 check_headers = 0 END
  PATCH_IF enhanced_edition BEGIN
    SAY 0x50 @418001 // on EEs, amulet descript mentions extra spells granted, so remove
  END
  BUT_ONLY IF_EXISTS

INCLUDE ~cdtweaks/lib/joinable_npc_array.tpa~

ACTION_PHP_EACH JOINABLE_NPC_ARRAY AS file => dv BEGIN

  ACTION_IF ("%dv%" STRING_COMPARE_CASE "edwin" = 0) BEGIN

    COPY_EXISTING ~%file%~ ~override~
      FOR (index = 0 ; index < 9 ; ++index) BEGIN
        LPF ADD_CRE_EFFECT INT_VAR opcode = 42 target = 1 parameter1 = 2 parameter2 = (2 ** index) timing = 9 END
      END
      BUT_ONLY

  END

END

COPY_EXISTING ~npring01.itm~ ~override~ // remove 'cannot be removed' description from nalia's ring
  SAY 0x54 @418002
  BUT_ONLY IF_EXISTS

ACTION_IF game_is_bgt BEGIN // bgt edwin has special scripting to keep wearing his amulet; disable it

  COPY_EXISTING ~bgedwin.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
      REPLACE_TEXTUALLY ~!HasItemEquipedReal("MISC89",Myself)~ ~False()~
    END
    BUT_ONLY

END

ACTION_IF game_includes_bg1 BEGIN // obg, tutu, bgt, bgee, eet
  ACTION_IF !tutu_gen BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY cd_removable_npc_items BEGIN
      alora, ~%tutu_var%alora~, ~%ALORA_BCS%~, bdalora, cdalorab => ~%tutu_var%misc88~               // alora's lucky rabbit foot; bdalora.bcs shouldn't exist
      edwin, ~%tutu_var%edwin~, ~%EDWIN_BCS%~, bdedwin, cdedamul => ~%tutu_scriptbg%misc89%eet_var%~ // edwin's amulet (bg/sod)
    END
  END ELSE BEGIN // tutu breaks its own _foo naming convention, so can't rely on CPM variables here
    ACTION_DEFINE_ASSOCIATIVE_ARRAY cd_removable_npc_items BEGIN
      alora, ~%tutu_var%alora~, ~%ALORA_BCS%~, bdalora, cdalorab => ~misc88~ // alora's lucky rabbit foot; bdalora.bcs shouldn't exist
      edwin, ~%tutu_var%edwin~, ~%EDWIN_BCS%~, bdedwin, cdedamul => ~misc89~ // edwin's amulet (bg/sod)
    END
  END
END

ACTION_IF game_includes_soa BEGIN // obg2, bgt, bg2ee, eet
  ACTION_DEFINE_ASSOCIATIVE_ARRAY cd_removable_npc_items BEGIN
    nalia, nalia15, nalia, nali25, cdnalrng => npring01 // nalia's de'Arnise Signet Ring
    edwin, edwin13, edwin, edwi25, cdedamul => misc89   // edwin's amulet (bg2/tob)
  END
END


ACTION_PHP_EACH cd_removable_npc_items AS params => item BEGIN // dv, cre file, script, expansion script, cloned item => item

  ACTION_IF FILE_EXISTS_IN_GAME ~%item%.itm~ AND FILE_EXISTS_IN_GAME ~%params_1%.cre~ BEGIN

    COPY_EXISTING ~%params_1%.cre~ ~override~
      READ_LONG  0x08 name
      READ_ASCII 0x248 script
      PATCH_IF !enhanced_edition BEGIN
        READ_BYTE 0x238 str
        READ_BYTE 0x23a int
        READ_BYTE 0x23b wis
        READ_BYTE 0x23c dex
        READ_BYTE 0x23d con
        READ_BYTE 0x23e chr
        READ_BYTE 0x272 race
        READ_BYTE 0x273 class
        READ_BYTE 0x27b align
      END
      BUT_ONLY

    COPY_EXISTING ~%item%.itm~ ~override~
      WRITE_LONG 0x18 (THIS BOR BIT2) // adds droppable flag
      WRITE_LONG 0x34 0 // make unsellable
      PATCH_IF enhanced_edition BEGIN
        LPF ADD_ITEM_EQEFFECT INT_VAR opcode = 319 target = 1 power = 1 parameter2 = 11 timing = 2 special = name STR_VAR resource = EVAL ~%params_0%~ END
      END ELSE BEGIN
        WRITE_SHORT 0x26 str
        WRITE_BYTE  0x2a int
        WRITE_BYTE  0x2c dex
        WRITE_BYTE  0x2e wis
        WRITE_BYTE  0x30 con
        WRITE_SHORT 0x32 chr
        SET usability = 0xffffffff
        PATCH_MATCH race WITH
          1 BEGIN SET usability -= BIT27 END // human
          2 BEGIN SET usability -= BIT23 END // elf
          4 BEGIN SET usability -= BIT24 END // dwarf
          3 BEGIN SET usability -= BIT25 END // half-elf
          5 BEGIN SET usability -= BIT26 END // halfling
          6 BEGIN SET usability -= BIT28 END // gnome
          7 BEGIN SET usability -= BIT31 END // half-orc
          DEFAULT
        END
        PATCH_MATCH class WITH
           1 BEGIN SET usability -= BIT18 END // mage
           2 BEGIN SET usability -= BIT11 END // fighter
           3 BEGIN SET usability -= BIT7  END // cleric
           4 BEGIN SET usability -= BIT22 END // thief
           5 BEGIN SET usability -= BIT6  END // bard
           6 BEGIN SET usability -= BIT20 END // paladin
           7 BEGIN SET usability -= BIT13 END // fighter_mage
           8 BEGIN SET usability -= BIT14 END // fighter_cleric
           9 BEGIN SET usability -= BIT17 END // fighter_thief
          10 BEGIN SET usability -= BIT16 END // fighter_mage_thief
          11 BEGIN SET usability -= BIT30 END // druid
          12 BEGIN SET usability -= BIT21 END // ranger
          13 BEGIN SET usability -= BIT19 END // mage_thief
          14 BEGIN SET usability -= BIT8  END // cleric_mage
          15 BEGIN SET usability -= BIT9  END // cleric_thief
          16 BEGIN SET usability -= BIT12 END // fighter_druid
          17 BEGIN SET usability -= BIT15 END // fighter_mage_cleric
          18 BEGIN SET usability -= BIT10 END // cleric_ranger
          19 BEGIN SET usability -= BIT18 END // sorcerer
          20 BEGIN SET usability -= BIT29 END // monk
          21 BEGIN SET usability -= BIT30 END // shaman
          DEFAULT
        END
        PATCH_MATCH align WITH
          17 BEGIN SET usability -= (BIT4 + BIT2) END // lawful_good
          18 BEGIN SET usability -= (BIT4 + BIT3) END // lawful_neutral
          19 BEGIN SET usability -= (BIT4 + BIT1) END // lawful_evil
          33 BEGIN SET usability -= (BIT5 + BIT2) END // neutral_good
          34 BEGIN SET usability -= (BIT5 + BIT3) END // neutral
          35 BEGIN SET usability -= (BIT5 + BIT1) END // neutral_evil
          49 BEGIN SET usability -= (BIT0 + BIT2) END // chaotic_good
          50 BEGIN SET usability -= (BIT0 + BIT3) END // chaotic_neutral
          51 BEGIN SET usability -= (BIT0 + BIT1) END // chaotic_evil
          DEFAULT
        END
        WRITE_LONG 0x1e usability
      END
      BUT_ONLY

    ACTION_IF enhanced_edition BEGIN

      COPY_EXISTING ~item_use.2da~ ~override~
        REPLACE_TEXTUALLY ~^\(%item%[ %TAB%]+[^ %TAB%]+[ %TAB%]+[0-9]+[ %TAB%]+\)[0-9]+~ ~\12~
        BUT_ONLY

    END ELSE BEGIN

      COPY_EXISTING ~%item%.itm~ ~override/%params_4%.itm~ // clone item

      ACTION_PHP_EACH JOINABLE_NPC_ARRAY AS file => dv BEGIN

        ACTION_IF ("%dv%" STRING_COMPARE_CASE "%params_0%" = 0) BEGIN

          COPY_EXISTING ~%file%~ ~override~
            READ_LONG 0x2bc item_off
            READ_LONG 0x2c0 item_num
            FOR (index = 0 ; index < item_num ; ++index) BEGIN
              READ_ASCII (item_off + 0x00 + (index * 0x14)) item_check
              PATCH_IF ("%item_check%" STRING_COMPARE_CASE "%item%" = 0) BEGIN
                WRITE_ASCIIE (item_off + 0x00 + (index * 0x14)) ~%params_4%~ #8
              END
            END
            BUT_ONLY

        END

      END

      OUTER_SPRINT item ~%params_4%~ // so that the script extensions, below, use the replacement item

    END

    ACTION_FOR_EACH script IN ~%params_2%~ ~%params_3%~ BEGIN
      ACTION_IF FILE_EXISTS_IN_GAME ~%script%.bcs~ BEGIN
        EXTEND_TOP ~%script%.bcs~ ~cdtweaks/baf/removable_npc_items.baf~ EVALUATE_BUFFER
      END
    END

  END // file check

END // php_each
