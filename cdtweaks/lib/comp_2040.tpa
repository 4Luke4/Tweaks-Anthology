/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// Universal Clubs                                  \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

OUTER_SET type_match = 0
OUTER_SET modify_descript = 0

ACTION_IF !enhanced_edition BEGIN

  ACTION_IF original_bg1 OR original_iwd OR game_is_iwd2 THEN BEGIN
    ACTION_IF original_iwd THEN BEGIN
      OUTER_SET type_match = 44
    END ELSE BEGIN
      OUTER_SET type_match = 17
    END
  END

  ACTION_IF FILE_CONTAINS_EVALUATED (~%tra_location%/%LANGUAGE%/game.tra~ ~^[ %TAB%]*@204001[ %TAB%]*=~) BEGIN // if translated strings are available...

    OUTER_SET modify_descript = 1 // ...then try to update item descriptions

    OUTER_SPRINT unusable_regexp_text      @204001
    OUTER_SPRINT unusable_replacement_text @204002
    OUTER_SPRINT mage_regexp_text          @204003

  END

END

PRINT @1
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  READ_BYTE  0x31 prof ELSE 0
  READ_SHORT 0x1c type
  READ_ASCII 0x22 anim (2)
  PATCH_IF ((((type_match = 0) AND (prof = 115)) OR          // for bg2-based games w/ proficiencies
              (type = type_match)) AND                       // games w/o profs
              ("%anim%" STRING_COMPARE_CASE "cl" = 0)) BEGIN // animation must match
    READ_BYTE 0x1f fighter
    PATCH_IF ((fighter BAND BIT3) = 0) BEGIN // if usable by single-class fighter
      WRITE_BYTE 0x20 (THIS BAND `BIT2)      // make usable by single-class mages
      PATCH_IF modify_descript BEGIN // skip this junk for EEs or if translation not available

        // update descriptions
        PATCH_FOR_EACH offset IN 0x50 0x54 BEGIN
          READ_STRREF ~%offset%~ desc
          PATCH_IF ("%desc%" STRING_COMPARE_REGEXP ~<Invalid Strref -?[0-9]+>~) BEGIN // checking for valid content in string
            INNER_PATCH_SAVE desc ~%desc%~ BEGIN
              REPLACE_TEXTUALLY ~%unusable_regexp_text%~ ~%unusable_replacement_text%~
            END
            PATCH_IF ((~%desc%~ STRING_CONTAINS_REGEXP ~^%unusable_replacement_text%~) == 0) BEGIN
              // extract usability info
              INNER_PATCH_SAVE usab_block ~%desc%~ BEGIN
                REPLACE_TEXTUALLY ~\(.*[%LNL%%MNL%%WNL%]\)*%unusable_replacement_text%~ ~~
              END
              // update info
              INNER_PATCH_SAVE usab_block_new ~%usab_block%~ BEGIN
                REPLACE_TEXTUALLY ~[%LNL%%MNL%%WNL%][- %TAB%]*$~ ~~ // remove any empty lines
                REPLACE_TEXTUALLY ~^[- %TAB%]*~ ~ ~ // make sure entries are indented by one space
                REPLACE_TEXTUALLY ~%mage_regexp_text%~ ~~ // remove mage line
              END
              // replace old usability info with new
              INNER_PATCH_SAVE desc ~%desc%~ BEGIN
                REPLACE_TEXTUALLY EXACT_MATCH ~%usab_block%~ ~%usab_block_new%~
              END

              // check if mage was the only thing that couldn't use
              INNER_PATCH_SAVE compare ~%desc%~ BEGIN
                REPLACE_TEXTUALLY ~^%unusable_replacement_text%.*[%LNL%%MNL%%WNL%] [^- %TAB%]~ ~~
              END
              // if it was...
              PATCH_IF (~%desc%~ STRING_EQUAL ~%compare%~) BEGIN
                INNER_PATCH_SAVE desc ~%desc%~ BEGIN
                  // remove 'not usable by' line, so it won't be sitting all by its lonesome now
                  REPLACE_TEXTUALLY ~[%LNL%%MNL%%WNL%]%unusable_replacement_text%.*~ ~~
                END
              END

              // write changes
              SAY_EVALUATED ~%offset%~ ~%desc%~
            END

          END
        END

      END
    END
  END
  BUT_ONLY

ACTION_IF FILE_EXISTS_IN_GAME ~weapprof.2da~ THEN BEGIN

  ACTION_CLEAR_ARRAY style_kits
  OUTER_SET $style_kits(MAGE)     =  1 // add straight mage
  OUTER_SET $style_kits(SORCERER) = 19 // shouldn't be in weapprof, but let's be safe
  COPY_EXISTING ~kitlist.2da~ ~override~
    SET col_check = (9 + enhanced_edition)
    COUNT_2DA_ROWS col_check rows
    FOR (row = 1 ; row < rows ; ++row) BEGIN
      READ_2DA_ENTRY row 8 col_check class
      PATCH_IF ((class = 1) OR (class = 19)) BEGIN // mage or sorcerer kit
        READ_2DA_ENTRY row 1 col_check kit
        SET $style_kits("%kit%") = class
      END
    END
    BUT_ONLY

  COPY_EXISTING ~weapprof.2da~ ~override~
    REPLACE_TEXTUALLY ~\(ID[ %TAB%]+NAME_REF\)~ ~CD_DELETE_ME \1~ // adding column to header column
    COUNT_2DA_COLS col_count
    FOR (col = 4 ; col < col_count ; ++col) BEGIN
      READ_2DA_ENTRY 0 col col_count kit
      PATCH_IF VARIABLE_IS_SET $style_kits("%kit%") BEGIN
        READ_2DA_ENTRY 18 col col_count club_check
        PATCH_IF !club_check BEGIN // only if 0 pips
          SET_2DA_ENTRY 18 col col_count 1
        END
      END
    END
    REPLACE_TEXTUALLY ~CD_DELETE_ME~ ~~ // removing it
    PRETTY_PRINT_2DA
    BUT_ONLY

END
